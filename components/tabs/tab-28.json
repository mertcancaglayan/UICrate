{
    "metadata": {
        "name": "Floating Tab System",
        "type": "UI Components",
        "category": "tabs",
        "image": "assets/previewImages/tabsPreview/tab-28.png",
        "description": "A floating tab system with dynamic tab indicator and responsive design for modern web interfaces.",
        "version": "1.0",
        "author": "Admin",
        "date": "2025-02-28"
    },
    "style": "* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: \"Inter\", system-ui, -apple-system, sans-serif;\n}\n\nbody {\n    background: #f8fafc;\n    min-height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 2rem;\n}\n\n.tab-container {\n    background: #fff;\n    width: 100%;\n    max-width: 1200px;\n    border-radius: 1.5rem;\n    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.1);\n    overflow: hidden;\n}\n\n.tab-nav {\n    display: flex;\n    position: relative;\n    padding: 1.5rem;\n    gap: 1rem;\n    background: linear-gradient(135deg, #6366f1 0%, #a855f7 100%);\n}\n\n.tab-button {\n    background: none;\n    border: none;\n    padding: 1rem 2rem;\n    color: rgba(255, 255, 255, 0.8);\n    cursor: pointer;\n    font-weight: 500;\n    border-radius: 0.75rem;\n    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n    position: relative;\n    z-index: 1;\n}\n\n.tab-button:hover {\n    color: white;\n    transform: translateY(-2px);\n}\n\n.tab-button.active {\n    color: white;\n}\n\n.tab-indicator {\n    position: absolute;\n    bottom: 0.75rem;\n    height: 40px;\n    background: rgba(255, 255, 255, 0.15);\n    border-radius: 0.5rem;\n    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n    backdrop-filter: blur(8px);\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n}\n\n.tab-content-wrapper {\n    padding: 3rem;\n}\n\n.tab-content {\n    display: none;\n    animation: contentReveal 0.4s ease-out;\n}\n\n.tab-content.active {\n    display: block;\n}\n\n.tab-content h2 {\n    color: #1e293b;\n    margin-bottom: 1.5rem;\n    font-size: 2rem;\n}\n\n.tab-content p {\n    color: #475569;\n    line-height: 1.7;\n    max-width: 65ch;\n}\n\n@keyframes contentReveal {\n    from {\n        opacity: 0;\n        transform: translateY(20px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n@media (max-width: 768px) {\n    .tab-nav {\n        flex-direction: column;\n        padding: 1rem;\n    }\n    .tab-button {\n        width: 100%;\n        justify-content: center;\n    }\n    .tab-indicator {\n        display: none;\n    }\n    .tab-content-wrapper {\n        padding: 2rem;\n    }\n}\n\n@media (max-width: 480px) {\n    body {\n        padding: 1rem;\n    }\n    .tab-content h2 {\n        font-size: 1.5rem;\n    }\n    .tab-button {\n        padding: 1rem;\n    }\n}\n",
    "html": "<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css\" />\n\n<div class=\"tab-container\">\n    <nav class=\"tab-nav\">\n        <button class=\"tab-button active\" data-target=\"overview\">\n            <i class=\"fas fa-binoculars\"></i>\n            Overview\n        </button>\n        <button class=\"tab-button\" data-target=\"analytics\">\n            <i class=\"fas fa-chart-network\"></i>\n            Analytics\n        </button>\n        <button class=\"tab-button\" data-target=\"integrations\">\n            <i class=\"fas fa-puzzle-piece\"></i>\n            Integrations\n        </button>\n        <button class=\"tab-button\" data-target=\"settings\">\n            <i class=\"fas fa-sliders-h\"></i>\n            Settings\n        </button>\n        <div class=\"tab-indicator\"></div>\n    </nav>\n    <div class=\"tab-content-wrapper\">\n        <div id=\"overview\" class=\"tab-content active\">\n            <h2>Project Overview</h2>\n            <p>\n                Gain a comprehensive view of your project's status, recent activities, and key performance\n                indicators in real-time.\n            </p>\n        </div>\n        <div id=\"analytics\" class=\"tab-content\">\n            <h2>Advanced Analytics</h2>\n            <p>\n                Deep dive into detailed metrics and generate custom reports with our powerful analytics engine.\n            </p>\n        </div>\n        <div id=\"integrations\" class=\"tab-content\">\n            <h2>Third-Party Integrations</h2>\n            <p>\n                Connect with popular services and streamline your workflow through our extensive integration\n                library.\n            </p>\n        </div>\n        <div id=\"settings\" class=\"tab-content\">\n            <h2>System Configuration</h2>\n            <p>Customize platform settings, manage user permissions, and configure security preferences.</p>\n        </div>\n    </div>\n</div>\n",
    "script": "document.addEventListener(\"DOMContentLoaded\", () => {\n    const buttons = document.querySelectorAll(\".tab-button\");\n    const contents = document.querySelectorAll(\".tab-content\");\n    const indicator = document.querySelector(\".tab-indicator\");\n    let animationFrame;\n\n    function updateIndicator(target) {\n        cancelAnimationFrame(animationFrame);\n        animationFrame = requestAnimationFrame(() => {\n            const rect = target.getBoundingClientRect();\n            const navRect = target.parentElement.getBoundingClientRect();\n            indicator.style.width = `${rect.width}px`;\n            indicator.style.left = `${rect.left - navRect.left}px`;\n            indicator.style.top = \"50%\";\n            indicator.style.transform = \"translateY(-50%)\";\n        });\n    }\n\n    buttons.forEach((button) => {\n        button.addEventListener(\"click\", () => {\n            // Remove active states\n            buttons.forEach((b) => b.classList.remove(\"active\"));\n            contents.forEach((c) => c.classList.remove(\"active\"));\n            // Add active states\n            button.classList.add(\"active\");\n            document.getElementById(button.dataset.target).classList.add(\"active\");\n            // Update indicator\n            updateIndicator(button);\n        });\n    });\n\n    // Initial setup\n    updateIndicator(document.querySelector(\".tab-button.active\"));\n\n    // Resize handler\n    window.addEventListener(\"resize\", () => {\n        const activeButton = document.querySelector(\".tab-button.active\");\n        updateIndicator(activeButton);\n    });\n});\n"
}