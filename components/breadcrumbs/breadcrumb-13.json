{
    "metadata": {
        "name": "Responsive Horizontal Breadcrumb",
        "type": "UI Components",
        "category": "breadcrumbs",
        "image": "assets/previewImages/breadcrumbsPreview/breadcrumb-13.png",
        "description": "A responsive horizontal breadcrumb navigation component with theme toggle. Supports smooth scrolling and animations. The component can switch between light and dark themes.",
        "version": "1.0",
        "author": "Admin",
        "date": "2025-02-22"
    },
    "style": "/* Styles for the breadcrumb and theme toggle */\n:root {\n  --bg: #f8f9fa;\n  --text: #212529;\n  --primary: #4a90e2;\n  --secondary: #357abd;\n  --accent: #e9ecef;\n}\n\n[data-theme=\"dark\"] {\n  --bg: #1a1a1a;\n  --text: #e9ecef;\n  --primary: #6c757d;\n  --secondary: #495057;\n  --accent: #343a40;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: var(--bg);\n  color: var(--text);\n  transition: all 0.3s ease;\n  font-family: \"Segoe UI\", sans-serif;\n}\n\n.theme-switch {\n  position: fixed;\n  top: 2rem;\n  right: 2rem;\n  width: 3rem;\n  height: 1.5rem;\n  background: var(--accent);\n  border-radius: 1rem;\n  cursor: pointer;\n}\n\n.theme-switch::before {\n  content: \"\";\n  position: absolute;\n  width: 1.2rem;\n  height: 1.2rem;\n  background: var(--primary);\n  border-radius: 50%;\n  top: 0.15rem;\n  left: 0.15rem;\n  transition: transform 0.3s ease;\n}\n\n[data-theme=\"dark\"] .theme-switch::before {\n  transform: translateX(1.5rem);\n}\n\n.breadcrumb {\n  display: flex;\n  align-items: center;\n  background: var(--accent);\n  border-radius: 2rem;\n  padding: 1rem 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  overflow-x: auto;\n  white-space: nowrap;\n  max-width: 95vw;\n  min-width: 300px;\n  scroll-behavior: smooth;\n  -webkit-overflow-scrolling: touch;\n}\n\n.crumb {\n  display: flex;\n  align-items: center;\n  position: relative;\n  padding: 0.5rem 1rem;\n  flex-shrink: 0;\n}\n\n.crumb a {\n  text-decoration: none;\n  color: var(--text);\n  font-weight: 500;\n  transition: all 0.3s ease;\n  position: relative;\n  font-size: 1rem;\n}\n\n.crumb a::after {\n  content: \"\";\n  position: absolute;\n  bottom: -2px;\n  left: 0;\n  width: 0;\n  height: 2px;\n  background: var(--primary);\n  transition: width 0.3s ease;\n}\n\n.crumb a:hover::after {\n  width: 100%;\n}\n\n.crumb:not(:last-child)::after {\n  content: \"â€º\";\n  margin: 0 1rem;\n  color: var(--text);\n  opacity: 0.5;\n}\n\n.current {\n  color: var(--primary);\n  font-weight: 600;\n  cursor: default;\n}\n\n/* Scrollbar styling */\n.breadcrumb::-webkit-scrollbar {\n  height: 4px;\n}\n\n.breadcrumb::-webkit-scrollbar-track {\n  background: var(--accent);\n}\n\n.breadcrumb::-webkit-scrollbar-thumb {\n  background: var(--primary);\n  border-radius: 2px;\n}\n\n@media (max-width: 768px) {\n  .breadcrumb {\n    padding: 0.75rem 1.5rem;\n    border-radius: 1.5rem;\n  }\n\n  .crumb {\n    padding: 0.5rem 0.75rem;\n  }\n\n  .crumb a {\n    font-size: 0.875rem;\n  }\n\n  .crumb:not(:last-child)::after {\n    margin: 0 0.5rem;\n  }\n\n  .theme-switch {\n    top: 1rem;\n    right: 1rem;\n    width: 2.5rem;\n    height: 1.25rem;\n  }\n\n  .theme-switch::before {\n    width: 1rem;\n    height: 1rem;\n    top: 0.125rem;\n    left: 0.125rem;\n  }\n\n  [data-theme=\"dark\"] .theme-switch::before {\n    transform: translateX(1.25rem);\n  }\n\n  .current {\n    font-size: 0.875rem;\n  }\n}\n\n@media (max-width: 480px) {\n  .breadcrumb {\n    padding: 0.5rem 1rem;\n  }\n\n  .crumb {\n    padding: 0.5rem;\n  }\n\n  .crumb a {\n    font-size: 0.8125rem;\n  }\n\n  .crumb:not(:last-child)::after {\n    margin: 0 0.25rem;\n  }\n}\n",
    "html": "<div class=\"theme-switch\" aria-label=\"Toggle theme\"></div>\n\n<nav aria-label=\"breadcrumb\">\n  <ol class=\"breadcrumb\">\n    <li class=\"crumb\">\n      <a href=\"#\">Home</a>\n    </li>\n    <li class=\"crumb\">\n      <a href=\"#\">Products</a>\n    </li>\n    <li class=\"crumb\">\n      <a href=\"#\">Electronics</a>\n    </li>\n    <li class=\"crumb\">\n      <a href=\"#\">Computers</a>\n    </li>\n    <li class=\"crumb\">\n      <a href=\"#\">Laptops</a>\n    </li>\n    <li class=\"crumb current\">\n      <span>Gaming Laptops</span>\n    </li>\n  </ol>\n</nav>",
    "script": "const themeSwitch = document.querySelector(\".theme-switch\");\nconst body = document.body;\n\n// Theme toggle\nthemeSwitch.addEventListener(\"click\", () => {\n  const isDark = body.getAttribute(\"data-theme\") === \"dark\";\n  body.setAttribute(\"data-theme\", isDark ? \"\" : \"dark\");\n  localStorage.setItem(\"theme\", isDark ? \"light\" : \"dark\");\n});\n\n// Initialize theme\nconst savedTheme = localStorage.getItem(\"theme\") || \"light\";\nbody.setAttribute(\"data-theme\", savedTheme === \"dark\" ? \"dark\" : \"\");\n\n// Breadcrumb interaction\ndocument.querySelectorAll(\".crumb a\").forEach((link) => {\n  link.addEventListener(\"click\", (e) => {\n    e.preventDefault();\n    link.animate([{ transform: \"scale(1)\" }, { transform: \"scale(0.95)\" }, { transform: \"scale(1)\" }], {\n      duration: 200,\n      easing: \"ease-out\",\n    });\n  });\n});\n\n// Add touch support for horizontal scrolling\nlet isDown = false;\nlet startX;\nlet scrollLeft;\nconst breadcrumb = document.querySelector(\".breadcrumb\");\n\nbreadcrumb.addEventListener(\"mousedown\", (e) => {\n  isDown = true;\n  startX = e.pageX - breadcrumb.offsetLeft;\n  scrollLeft = breadcrumb.scrollLeft;\n});\n\nbreadcrumb.addEventListener(\"mouseleave\", () => {\n  isDown = false;\n});\n\nbreadcrumb.addEventListener(\"mouseup\", () => {\n  isDown = false;\n});\n\nbreadcrumb.addEventListener(\"mousemove\", (e) => {\n  if (!isDown) return;\n  e.preventDefault();\n  const x = e.pageX - breadcrumb.offsetLeft;\n  const walk = (x - startX) * 2;\n  breadcrumb.scrollLeft = scrollLeft - walk;\n});\n\n// Touch events\nbreadcrumb.addEventListener(\"touchstart\", (e) => {\n  isDown = true;\n  startX = e.touches[0].pageX - breadcrumb.offsetLeft;\n  scrollLeft = breadcrumb.scrollLeft;\n});\n\nbreadcrumb.addEventListener(\"touchend\", () => {\n  isDown = false;\n});\n\nbreadcrumb.addEventListener(\"touchmove\", (e) => {\n  if (!isDown) return;\n  e.preventDefault();\n  const x = e.touches[0].pageX - breadcrumb.offsetLeft;\n  const walk = (x - startX) * 2;\n  breadcrumb.scrollLeft = scrollLeft - walk;\n});"
}