{
	"metadata": {
		"name": "Breadcrumbs with Theme Toggle",
		"type": "UI Components",
		"category": "breadcrumbs",
		"image": "https://placehold.co/600x400/png",
		"description": "A modern breadcrumb navigation system with a theme toggle button. Supports light and dark themes and is fully responsive.",
		"version": "1.0",
		"author": "Admin",
		"date": "2025-02-21"
	},
	"style": ":root {\n  --bg: #ffffff;\n  --text: #1a1a1a;\n  --surface: #f8f9fa;\n  --accent: #3b82f6;\n  --border: #e9ecef;\n  --theme-icon: #1a1a1a;\n}\n\n.dark-mode {\n  --bg: #0f172a;\n  --text: #f8fafc;\n  --surface: #1e293b;\n  --accent: #60a5fa;\n  --border: #334155;\n  --theme-icon: #fbbf24;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: \"Inter\", system-ui, sans-serif;\n}\n\nbody {\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: var(--bg);\n  color: var(--text);\n  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.breadcrumb-container {\n  position: relative;\n  background: var(--surface);\n  padding: 1.5rem;\n  border-radius: 16px;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);\n}\n\n.breadcrumb-nav {\n  display: flex;\n  gap: 0.5rem;\n  position: relative;\n}\n\n.breadcrumb-item {\n  position: relative;\n  padding: 0.75rem 1.25rem;\n  border-radius: 8px;\n  transition: all 0.3s ease;\n}\n\n.breadcrumb-item:not(:last-child)::after {\n  content: \"â€º\";\n  position: absolute;\n  right: -0.75rem;\n  color: var(--text);\n  opacity: 0.4;\n  top: 25%;\n}\n\n.breadcrumb-link {\n  text-decoration: none;\n  color: var(--text);\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  transition: all 0.3s ease;\n}\n\n.breadcrumb-link svg {\n  width: 16px;\n  height: 16px;\n  transition: transform 0.3s ease;\n}\n\n.breadcrumb-link:hover {\n  color: var(--accent);\n}\n\n.breadcrumb-link:hover svg {\n  transform: translateX(2px);\n}\n\n.active-indicator {\n  position: absolute;\n  bottom: -8px;\n  height: 2px;\n  background: var(--accent);\n  border-radius: 2px;\n  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.theme-toggle {\n  position: fixed;\n  top: 2rem;\n  right: 2rem;\n  width: 48px;\n  height: 48px;\n  background: var(--surface);\n  border-radius: 50%;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.theme-icon {\n  position: relative;\n  width: 24px;\n  height: 24px;\n  transition: all 0.4s ease;\n}\n\n.sun {\n  fill: var(--theme-icon);\n  opacity: 1;\n}\n\n.moon {\n  fill: var(--theme-icon);\n  position: absolute;\n  opacity: 0;\n  transform: rotate(-90deg);\n}\n\n.dark-mode .sun {\n  opacity: 0;\n  transform: rotate(90deg);\n}\n\n.dark-mode .moon {\n  opacity: 1;\n  transform: rotate(0deg);\n}\n\n@media (max-width: 640px) {\n  .breadcrumb-container {\n    padding: 1rem;\n  }\n\n  .breadcrumb-item {\n    padding: 0.5rem 1rem;\n  }\n\n  .theme-toggle {\n    top: 1rem;\n    right: 1rem;\n  }\n}",
	"html": "<body>\n  <button class=\"theme-toggle\" aria-label=\"Toggle theme\">\n    <svg class=\"theme-icon sun\" viewBox=\"0 0 24 24\">\n      <path\n        d=\"M12 18c-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6-2.7 6-6 6zm0-14v4m0 12v4M4.9 4.9l2.8 2.8m8.5 8.5 2.8 2.8M2 12h4m12 0h4M4.9 19.1l2.8-2.8m8.5-8.5 2.8-2.8\"\n      />\n    </svg>\n    <svg class=\"theme-icon moon\" viewBox=\"0 0 24 24\">\n      <path d=\"M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1-8.313-12.454z\" />\n    </svg>\n  </button>\n\n  <div class=\"breadcrumb-container\">\n    <nav class=\"breadcrumb-nav\" aria-label=\"Breadcrumb\">\n      <div class=\"active-indicator\"></div>\n\n      <div class=\"breadcrumb-item\">\n        <a href=\"#\" class=\"breadcrumb-link\">\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path d=\"M12 2L2 12h3v8h6v-6h2v6h6v-8h3L12 2z\" />\n          </svg>\n          Home\n        </a>\n      </div>\n      <div class=\"breadcrumb-item\">\n        <a href=\"#\" class=\"breadcrumb-link\">\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path\n              d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4 6h-4v2h4v2h-4v2h4v2H9V7h6v2z\"\n            />\n          </svg>\n          Products\n        </a>\n      </div>\n      <div class=\"breadcrumb-item\">\n        <a href=\"#\" class=\"breadcrumb-link\">\n          <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n            <path\n              d=\"M20 6h-4V4c0-1.1-.9-2-2-2h-4c-1.1 0-2 .9-2 2v2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm-6 0h-4V4h4v2z\"\n            />\n          </svg>\n          Category\n        </a>\n      </div>\n    </nav>\n  </div>\n\n  <script>\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      const body = document.body;\n      const themeToggle = document.querySelector(\".theme-toggle\");\n      const links = document.querySelectorAll(\".breadcrumb-link\");\n      const indicator = document.querySelector(\".active-indicator\");\n\n      // Theme toggle\n      themeToggle.addEventListener(\"click\", () => {\n        body.classList.toggle(\"dark-mode\");\n        localStorage.setItem(\"theme\", body.classList.contains(\"dark-mode\") ? \"dark\" : \"light\");\n      });\n\n      // Load saved theme\n      if (localStorage.getItem(\"theme\") === \"dark\") {\n        body.classList.add(\"dark-mode\");\n      }\n\n      // Update active indicator\n      function updateIndicator(activeLink) {\n        const linkRect = activeLink.parentElement.getBoundingClientRect();\n        const containerRect = activeLink.closest(\".breadcrumb-nav\").getBoundingClientRect();\n\n        indicator.style.width = `${linkRect.width}px`;\n        indicator.style.left = `${linkRect.left - containerRect.left}px`;\n      }\n\n      // Set initial active state\n      links[0].classList.add(\"active\");\n      updateIndicator(links[0]);\n\n      // Breadcrumb interactions\n      links.forEach((link) => {\n        link.addEventListener(\"click\", (e) => {\n          e.preventDefault();\n          links.forEach((l) => l.classList.remove(\"active\"));\n          e.currentTarget.classList.add(\"active\");\n          updateIndicator(e.currentTarget);\n        });\n      });\n\n      // Window resize handler\n      window.addEventListener(\"resize\", () => {\n        const activeLink = document.querySelector(\".breadcrumb-link.active\");\n        if (activeLink) updateIndicator(activeLink);\n      });\n    });\n  </script>\n</body>",
	"script": "document.addEventListener(\"DOMContentLoaded\", () => {\n  const body = document.body;\n  const themeToggle = document.querySelector(\".theme-toggle\");\n  const links = document.querySelectorAll(\".breadcrumb-link\");\n  const indicator = document.querySelector(\".active-indicator\");\n\n  // Theme toggle\n  themeToggle.addEventListener(\"click\", () => {\n    body.classList.toggle(\"dark-mode\");\n    localStorage.setItem(\"theme\", body.classList.contains(\"dark-mode\") ? \"dark\" : \"light\");\n  });\n\n  // Load saved theme\n  if (localStorage.getItem(\"theme\") === \"dark\") {\n    body.classList.add(\"dark-mode\");\n  }\n\n  // Update active indicator\n  function updateIndicator(activeLink) {\n    const linkRect = activeLink.parentElement.getBoundingClientRect();\n    const containerRect = activeLink.closest(\".breadcrumb-nav\").getBoundingClientRect();\n\n    indicator.style.width = `${linkRect.width}px`;\n    indicator.style.left = `${linkRect.left - containerRect.left}px`;\n  }\n\n  // Set initial active state\n  links[0].classList.add(\"active\");\n  updateIndicator(links[0]);\n\n  // Breadcrumb interactions\n  links.forEach((link) => {\n    link.addEventListener(\"click\", (e) => {\n      e.preventDefault();\n      links.forEach((l) => l.classList.remove(\"active\"));\n      e.currentTarget.classList.add(\"active\");\n      updateIndicator(e.currentTarget);\n    });\n  });\n\n  // Window resize handler\n  window.addEventListener(\"resize\", () => {\n    const activeLink = document.querySelector(\".breadcrumb-link.active\");\n    if (activeLink) updateIndicator(activeLink);\n  });\n});"
}
